#!/usr/bin/env node

/*
 * Copyright(c) 2011 Christian Smith <smith@anvil.io>
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/**
 * Module dependecies.
 */

var norq = require('norq')
  , repl = require('repl')
  , util = require('util')
  , fs = require('fs')
  , exec = require('child_process').exec;

/**
 * Norq Version
 */

var version = '0.0.0';

/**
 * Norq Help
 */

var help = 'RTFM';

/**
 * Argument Aliases
 */

var aliases = { 
  '-h': 'help',
  '--help': 'help',
  '-v': 'version',
  '--version': 'version'
};

/**
 * Get args and replace aliases
 */

var args = process.argv.slice(2).map(function (arg) {
  return aliases[arg] || arg;
});

/**
 * The first arg is a  norq command 
 */

var command = args.shift();

switch (command) {
  case 'version':
    console.log(version);
    process.exit(1);
    break;

  case 'help':
    console.log(help);
    process.exit(1);
    break;

  case 'http':
    var server = norq.createServer(norq.config);
    server.listen(5150);
    console.log('Norq HTTP server listening on port %d', server.address().port);
    break;

  case 'repl':
    // need to "exit on exit"? and add a line break in the shell
    // process.on('exit', ...) doesn't work directly?
    // is this fixed if I upgrade node?
    var context = repl.start('norq> ').context;
    context.norq = norq;
    context.client = norq.createClient(norq.config);
    break;

  case 'init':
    // check for existing file first
    fs.writeFile('./norq.json', JSON.stringify(norq.defaults, null, 2), function () {
      process.exit(1);  
    });
    break;

  default:
    var client = norq.createClient(norq.config);
    var operation = client[command];
    if (operation) {
      args.push(function (err, result) { 
        norq.print(err, result); 
        process.exit(1);
      });
      operation.apply(client, args);
    } else {
      console.log('Ich weiss es nicht!');  
      process.exit(1);
    }
    break;
}
